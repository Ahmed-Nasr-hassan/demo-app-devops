name: Terraform

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'

env:
  TF_WORKSPACE: dev
  TF_VAR_environment: dev

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    strategy:
      matrix:
        cloud: [aws, azure]

    defaults:
      run:
        working-directory: terraform/${{ matrix.cloud }}/environments/dev

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.11.0

    - name: Configure AWS Credentials
      if: matrix.cloud == 'aws'
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Configure Azure Credentials
      if: matrix.cloud == 'azure'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'push' #'pull_request'
      run: terraform plan -no-color
      continue-on-error: true

    # Following Part SHould be Added if terraform apply is required 

    # - name: Update Pull Request
    #   uses: actions/github-script@v6
    #   if: github.event_name == 'pull_request'
    #   env:
    #     PLAN: "${{ steps.plan.outputs.stdout }}"
    #   with:
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
    #     script: |
    #       const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
    #       #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
    #       #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
    #       #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

    #       <details><summary>Show Plan</summary>

    #       \`\`\`\n
    #       ${process.env.PLAN}
    #       \`\`\`

    #       </details>`;

    #       github.rest.issues.createComment({
    #         issue_number: context.issue.number,
    #         owner: context.repo.owner,
    #         repo: context.repo.name,
    #         body: output
    #       })

    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   run: terraform apply -auto-approve 